import { IgxGridNavigationService } from '../grid-navigation.service';
import { IgxPivotGridComponent } from './pivot-grid.component';
import { IMultiRowLayoutNode } from '../public_api';
import { IPivotDimension, IPivotGridRecord } from './pivot-grid.interface';
import * as i0 from "@angular/core";
export declare class IgxPivotGridNavigationService extends IgxGridNavigationService {
    grid: IgxPivotGridComponent;
    isRowHeaderActive: boolean;
    isRowDimensionHeaderActive: boolean;
    get lastRowDimensionsIndex(): number;
    get lastRowDimensionMRLRowIndex(): number;
    focusOutRowHeader(): void;
    handleNavigation(event: KeyboardEvent): Promise<void>;
    handleAlt(key: string, event: KeyboardEvent): void;
    updateActiveNodeLayout(): void;
    /** Update active cell when toggling row expand when horizontal summaries have position set to top */
    onRowToggle(newExpandState: boolean, dimension: IPivotDimension, rowData: IPivotGridRecord, prevCellLayout: IMultiRowLayoutNode): void;
    headerNavigation(event: KeyboardEvent): Promise<void>;
    focusTbody(event: any): void;
    getNextVerticalPosition(previous: any, ctrl: any, homeEnd: any): Promise<{
        row: number;
        column: number;
        layout: IMultiRowLayoutNode;
    }>;
    getNextHorizontalPosition(previous: any, ctrl: any): Promise<{
        row: number;
        column: number;
        layout: IMultiRowLayoutNode;
    }>;
    private scrollToNextHorizontalDimRow;
    private getNextVerticalColumnIndex;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxPivotGridNavigationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IgxPivotGridNavigationService>;
}
