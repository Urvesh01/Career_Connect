import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
export declare class IgxNavDrawerItemDirective {
    /**
     * Styles a navigation drawer item as selected.
     * If not set, `active` will have default value `false`.
     *
     * @example
     * ```html
     * <span igxDrawerItem [active]="true">Active Item</span>
     * ```
     */
    active: boolean;
    /**
     * Disables a navigation drawer item.
     * If not set, `disabled` will have default value `false`.
     *
     * @example
     * ```html
     * <span igxDrawerItem [disabled]="true">Disabled Item</span>
     * ```
     */
    disabled: boolean;
    /**
     * Styles a navigation drawer item as a group header.
     * If not set, `isHeader` will have default value `false`.
     *
     * @example
     * ```html
     * <span igxDrawerItem [isHeader]="true">Header</span>
     * ```
     */
    isHeader: boolean;
    /**
     * @hidden
     */
    readonly activeClass = "igx-nav-drawer__item--active";
    /**
    * @hidden
    */
    readonly disabledClass = "igx-nav-drawer__item--disabled";
    /**
     * @hidden
     */
    get defaultCSS(): boolean;
    /**
     * @hidden
     */
    get currentCSS(): boolean;
    /**
     * @hidden
     */
    get headerCSS(): boolean;
    /**
     * @hidden
     */
    get disabledCSS(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxNavDrawerItemDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxNavDrawerItemDirective, "[igxDrawerItem]", ["igxDrawerItem"], { "active": { "alias": "active"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "isHeader": { "alias": "isHeader"; "required": false; }; }, {}, never, never, true, never>;
    static ngAcceptInputType_active: unknown;
    static ngAcceptInputType_disabled: unknown;
    static ngAcceptInputType_isHeader: unknown;
}
export declare class IgxNavDrawerTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxNavDrawerTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxNavDrawerTemplateDirective, "[igxDrawer]", never, {}, {}, never, never, true, never>;
}
export declare class IgxNavDrawerMiniTemplateDirective {
    template: TemplateRef<any>;
    constructor(template: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxNavDrawerMiniTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IgxNavDrawerMiniTemplateDirective, "[igxDrawerMini]", never, {}, {}, never, never, true, never>;
}
