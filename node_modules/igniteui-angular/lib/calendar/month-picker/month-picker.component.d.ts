import { ElementRef, AfterViewInit, OnDestroy, OnInit } from "@angular/core";
import { IgxMonthsViewComponent } from "../months-view/months-view.component";
import { IgxYearsViewComponent } from "../years-view/years-view.component";
import { IgxDaysViewComponent } from "../days-view/days-view.component";
import { IgxCalendarBaseDirective } from "../calendar-base";
import * as i0 from "@angular/core";
export declare class IgxMonthPickerComponent extends IgxCalendarBaseDirective implements OnInit, AfterViewInit, OnDestroy {
    /**
     * Sets/gets the `id` of the month picker.
     * If not set, the `id` will have value `"igx-month-picker-0"`.
     */
    id: string;
    /**
     * @hidden
     * @internal
     */
    private _activeDescendant;
    /**
     * @hidden
     * @internal
     */
    wrapper: ElementRef;
    /**
     * The default css class applied to the component.
     *
     * @hidden
     */
    styleClass: boolean;
    /**
     * @hidden
     */
    monthsView: IgxMonthsViewComponent;
    /**
     * @hidden
     */
    dacadeView: IgxYearsViewComponent;
    /**
     * @hidden
     */
    daysView: IgxDaysViewComponent;
    /**
     * @hidden
     */
    yearsBtn: ElementRef;
    /**
     * @hidden
     */
    previousPage(event?: KeyboardEvent): void;
    /**
     * @hidden
     */
    nextPage(event?: KeyboardEvent): void;
    /**
     * @hidden
     * @internal
     */
    onActiveViewDecadeKB(date: Date, event: KeyboardEvent, activeViewIdx: number): void;
    /**
     * @hidden
     * @internal
     */
    onActiveViewDecade(event: MouseEvent, date: Date, activeViewIdx: number): void;
    /**
     * @hidden
     */
    activeViewDecadeKB(event: KeyboardEvent): void;
    /**
     * @hidden
     */
    activeViewDecade(): void;
    /**
     * @hidden
     */
    changePageKB(event: KeyboardEvent, next?: boolean): void;
    /**
     * @hidden
     */
    selectYear(event: Date): void;
    /**
     * @hidden
     */
    selectMonth(event: Date): void;
    /**
     * Selects a date.
     * ```typescript
     *  this.monthPicker.selectDate(new Date(`2018-06-12`));
     * ```
     */
    selectDate(value: Date): Date;
    /**
     * @hidden
     */
    getNextYear(): number;
    /**
     * @hidden
     */
    getPreviousYear(): number;
    /**
     * @hidden
     */
    updateDate(date: Date): void;
    protected onMouseDown(event: MouseEvent): void;
    private _showActiveDay;
    /**
     * @hidden
     * @internal
     */
    protected set showActiveDay(value: boolean);
    protected get showActiveDay(): boolean;
    protected get activeDescendant(): number;
    protected set activeDescendant(date: Date);
    get isDefaultView(): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private onWrapperFocus;
    private onWrapperBlur;
    private handlePageUpDown;
    private handlePageUp;
    private handlePageDown;
    private onArrowUp;
    private onArrowDown;
    private onArrowLeft;
    private onArrowRight;
    private onEnter;
    private onHome;
    private onEnd;
    /**
     * @hidden
     * @internal
     */
    ngOnDestroy(): void;
    /**
     * @hidden
     * @internal
     */
    getPrevYearDate(date: Date): Date;
    /**
     * @hidden
     * @internal
     */
    getNextYearDate(date: Date): Date;
    /**
     * Getter for the context object inside the calendar templates.
     *
     * @hidden
     * @internal
     */
    getContext(i: number): {
        $implicit: {
            index: number;
            date: Date;
        } | {
            index: number;
            date: Date;
        }[];
    };
    /**
     * Helper method building and returning the context object inside the calendar templates.
     *
     * @hidden
     * @internal
     */
    private generateContext;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxMonthPickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxMonthPickerComponent, "igx-month-picker", never, { "id": { "alias": "id"; "required": false; }; }, {}, never, never, true, never>;
}
