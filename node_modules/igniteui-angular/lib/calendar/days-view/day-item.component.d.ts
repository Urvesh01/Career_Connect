import { EventEmitter, ElementRef } from '@angular/core';
import { DateRangeDescriptor } from '../../core/dates';
import { CalendarDay } from '../common/model';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class IgxDayItemComponent {
    private elementRef;
    date: CalendarDay;
    viewDate: Date;
    selection: string;
    /**
     * Returns boolean indicating if the day is selected
     *
     */
    get selected(): any;
    /**
     * Selects the day
     */
    set selected(value: any);
    disabledDates: DateRangeDescriptor[];
    specialDates: DateRangeDescriptor[];
    hideOutsideDays: boolean;
    isLastInRange: boolean;
    isFirstInRange: boolean;
    isWithinRange: boolean;
    isWithinPreviewRange: boolean;
    hideLeadingDays: boolean;
    hideTrailingDays: boolean;
    private get hideLeading();
    private get hideTrailing();
    dateSelection: EventEmitter<CalendarDay>;
    mouseEnter: EventEmitter<void>;
    mouseLeave: EventEmitter<void>;
    mouseDown: EventEmitter<void>;
    get isCurrentMonth(): boolean;
    get isPreviousMonth(): boolean;
    get isNextMonth(): boolean;
    get nativeElement(): any;
    isActive: boolean;
    get isSelectedCSS(): boolean;
    get isInactive(): boolean;
    get isHidden(): boolean;
    get isToday(): boolean;
    get isWeekend(): boolean;
    get isDisabled(): boolean;
    get isFocusable(): boolean;
    protected onMouseEnter(): void;
    protected onMouseLeave(): void;
    protected onMouseDown(event: MouseEvent): void;
    get isWithinRangeCSS(): boolean;
    get isWithinPreviewRangeCSS(): boolean;
    get isSpecial(): boolean;
    get isDisabledCSS(): boolean;
    get isSingleSelection(): boolean;
    private _selected;
    constructor(elementRef: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxDayItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxDayItemComponent, "igx-day-item", never, { "date": { "alias": "date"; "required": false; }; "viewDate": { "alias": "viewDate"; "required": false; }; "selection": { "alias": "selection"; "required": false; }; "selected": { "alias": "selected"; "required": false; }; "disabledDates": { "alias": "disabledDates"; "required": false; }; "specialDates": { "alias": "specialDates"; "required": false; }; "hideOutsideDays": { "alias": "hideOutsideDays"; "required": false; }; "isLastInRange": { "alias": "isLastInRange"; "required": false; }; "isFirstInRange": { "alias": "isFirstInRange"; "required": false; }; "isWithinRange": { "alias": "isWithinRange"; "required": false; }; "isWithinPreviewRange": { "alias": "isWithinPreviewRange"; "required": false; }; "hideLeadingDays": { "alias": "hideLeadingDays"; "required": false; }; "hideTrailingDays": { "alias": "hideTrailingDays"; "required": false; }; "isActive": { "alias": "isActive"; "required": false; }; }, { "dateSelection": "dateSelection"; "mouseEnter": "mouseEnter"; "mouseLeave": "mouseLeave"; "mouseDown": "mouseDown"; }, never, ["*"], true, never>;
    static ngAcceptInputType_hideOutsideDays: unknown;
    static ngAcceptInputType_isLastInRange: unknown;
    static ngAcceptInputType_isFirstInRange: unknown;
    static ngAcceptInputType_isWithinRange: unknown;
    static ngAcceptInputType_isWithinPreviewRange: unknown;
    static ngAcceptInputType_hideLeadingDays: unknown;
    static ngAcceptInputType_hideTrailingDays: unknown;
    static ngAcceptInputType_isActive: unknown;
}
