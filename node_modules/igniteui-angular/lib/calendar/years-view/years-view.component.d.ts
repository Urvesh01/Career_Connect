import { ElementRef } from "@angular/core";
import { IgxCalendarViewDirective } from "../common/calendar-view.directive";
import { ControlValueAccessor } from "@angular/forms";
import type { DayInterval } from "../common/model";
import * as i0 from "@angular/core";
export declare class IgxYearsViewComponent extends IgxCalendarViewDirective implements ControlValueAccessor {
    #private;
    el: ElementRef;
    /**
     * The default css class applied to the component.
     *
     * @hidden
     */
    readonly viewClass = true;
    /**
     * @hidden @internal
     */
    get standalone(): boolean;
    set standalone(value: boolean);
    /**
     * @hidden
     */
    private _yearFormat;
    /**
     * @hidden
     */
    private _yearsPerPage;
    /**
     * Gets the year format option of the years view.
     * ```typescript
     * let yearFormat = this.yearsView.yearFormat.
     * ```
     */
    get yearFormat(): any;
    /**
     * Sets the year format option of the years view.
     * ```html
     * <igx-years-view [yearFormat]="numeric"></igx-years-view>
     * ```
     *
     * @memberof IgxYearsViewComponent
     */
    set yearFormat(value: any);
    /**
     * Returns an array of date objects which are then used to properly
     * render the years.
     *
     * Used in the template of the component.
     *
     * @hidden @internal
     */
    get range(): Date[];
    constructor(el: ElementRef, dayInterval: DayInterval);
    /**
     * Returns the locale representation of the year in the years view.
     *
     * @hidden
     */
    formattedYear(value: Date): {
        long: string;
        formatted: string;
    };
    /**
     * @hidden
     */
    yearTracker(_: number, item: Date): string;
    /**
     * @hidden
     */
    protected initFormatter(): void;
    /**
     * @hidden
     */
    protected onMouseDown(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxYearsViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxYearsViewComponent, "igx-years-view", never, { "standalone": { "alias": "standalone"; "required": false; }; "yearFormat": { "alias": "yearFormat"; "required": false; }; }, {}, never, never, true, never>;
}
