"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseComponent = void 0;
const path = __importStar(require("path"));
// cross-ref, don't use barrel exports
const Util_1 = require("../util/Util");
class BaseComponent {
    /**
     * Create a new Component
     * @param rootPath Root path for the Component directory (__dirname)
     */
    constructor(rootPath) {
        this.groupPriority = 0;
        this.basePath = __dirname;
        if (rootPath) {
            this.basePath = rootPath;
        }
        this.templates = this.loadTemplates();
    }
    get templateIds() {
        return this.templates.map(x => x.id);
    }
    loadTemplates() {
        let modulePath;
        const templates = [];
        const templatePaths = Util_1.Util.getDirectoryNames(this.basePath);
        for (const templatePath of templatePaths) {
            modulePath = path.join(this.basePath, templatePath);
            templates.push(require(modulePath));
        }
        return templates;
    }
}
exports.BaseComponent = BaseComponent;
