import { Separator } from '@inquirer/prompts';
import { Context } from '@inquirer/type';
type InputConfig = {
    message: string;
    default?: string;
    required?: boolean;
    type?: string;
    name?: string;
    choices?: (string | Separator)[];
    transformer?: (value: string, { isFinal }: {
        isFinal: boolean;
    }) => string;
    validate?: any;
    theme?: unknown;
};
export declare class InquirerWrapper {
    private constructor();
    static input(message: InputConfig, context?: Context): Promise<string>;
    static select(message: InputConfig & {
        choices: (string | Separator)[];
    }, context?: Context): Promise<string>;
    static checkbox(message: InputConfig & {
        choices: (string | Separator)[];
    }, context?: Context): Promise<string[]>;
}
export {};
